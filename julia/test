Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5643: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Mon Nov  4 13:02:12 2019
Results reported at Mon Nov  4 13:02:45 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

echo "Hello!"

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    561.71 sec.

The output (if any) follows:

Hello!
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5644: <test> Exited

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Mon Nov  4 13:11:42 2019
Results reported at Tue Nov  5 11:40:16 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

echo "Hello!"

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output

tail -f output

------------------------------------------------------------

Exited with exit code 130.

Resource usage summary:

    CPU time   :    565.41 sec.

The output (if any) follows:

Hello!
itemp 16 <=> 17 acceptance_rate= 0.0
itemp 17 <=> 18 acceptance_rate= 0.2
itemp 18 <=> 19 acceptance_rate= 0.0
itemp 19 <=> 20 acceptance_rate= 0.1
itemp 20 <=> 21 acceptance_rate= 0.0
itemp 21 <=> 22 acceptance_rate= 0.0
itemp 22 <=> 23 acceptance_rate= 0.0
itemp 23 <=> 24 acceptance_rate= 0.1
 14.222945 seconds (24.31 M allocations: 1.051 GiB, 6.05% gc time)
Mon Nov  4 13:12:09 JST 2019
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5645: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Tue Nov  5 11:40:17 2019
Results reported at Tue Nov  5 11:41:01 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/cp_main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    586.94 sec.

The output (if any) follows:

ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: KeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not found
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
 [1] 
 [1] 
 [1] KeyError: key "M2" not found
Stacktrace:
 [1] 
 [1] 
 [1] 
 [1] 

Stacktrace: [1] 
 [1] 
 [1] 
 [1] 
Stacktrace:
 [1] 
 [1] KeyError: key "M2" not foundKeyError: key "M2" not found
 [1] 
 [1] KeyError: key "M2" not foundKeyError: key "M2" not foundKeyError: key "M2" not found
 [1] 
 [1] 
 [1] 
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
 [1] 
 [1] 
 [1] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] 
 [1] getindex at ./dict.jl:478 [inlined]
 [2] 
 [1] getindex at ./dict.jl:478 [inlined]

 [2]  [1] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] mean(getindex at ./dict.jl:478 [inlined]
 [2] mean(mean(mean(mean(mean(mean(mean(mean(::mean(mean(::mean(::::::::mean::(::mean(::::mean(::::::mean(::mean::(mean(::::::getindex at getindex./dict.jl:478 [inlined]
 at ./dict.jl:478 [inlined] [2] 
 [2] getindexgetindex at ./dict.jl:478 [inlined]
 at ./dict.jl:478 [inlined] [2] 
 [2] getindex at ./dict.jl:478 [inlined]
 [2] getindex at ./dict.jl:478 [inlined]
 [2] Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::AccumulatorModule, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::, ::Base.JLOptions)String) at /home/kakizawa/lecture/julia/accumulator.jl:25 at 
 [3] mean_gather(::Accumulator, ::String, ::./client.jl:267MPI
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
Accumulator, :: [6] includeString at ./boot.jl:326 [inlined]
 [7] include_relative(::)Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(:: at Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
/home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Commmean() at /home/kakizawa/lecture/julia/accumulator.jl:30mean(
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at Accumulator./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base, ::.JLOptionsString) at /home/kakizawa/lecture/julia/accumulator.jl:25) at ./client.jl:267

 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.AccumulatorComm, ::) at /home/kakizawa/lecture/julia/cp_main.jl:201String) at /home/kakizawa/lecture/julia/accumulator.jl:25Accumulator
 [3] mean_gather(, ::::Accumulator, ::String, ::
MPI.CommString)) at /home/kakizawa/lecture/julia/accumulator.jl:30 at /home/kakizawa/lecture/julia/accumulator.jl:25
 [4] solve(::
 [3] String, ::MPI.Comm) at mean_gather(::Accumulator, /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] ::String, ::top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relativeMPI.Comm(::) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::Module, ::String, ::MPIString) at ./loading.jl:1038.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [8] 
 [5] top-level scopeinclude(::Module at util.jl:156
 [6] , ::String)include at ./boot.jl:326 [inlined] at ./sysimg.jl:29
 [9] 
 [7] include_relativeexec_options(::(:: [5] Module, Base.JLOptions) at ::String) at ./client.jl:267
 [10] ./loading.jl:1038
 [8] _start()include(::Module at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242, ::String) at 
./sysimg.jl:29
 [9] exec_options(::top-level scopeBase at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::.JLOptions) at Module./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::StringAccumulator) at ./loading.jl:1038, 
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::::Base.JLOptionsAccumulator)String) at , /home/kakizawa/lecture/julia/accumulator.jl:25::
 [3]  at ./client.jl:267mean_gather
 [10] _start(String) at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] (mean_gather(::Accumulator, ::String, ::::MPIAccumulator, ::String, ::.Comm) at MPI/home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] includeAccumulator at ./boot.jl:326 [inlined]
 [7] include_relative, ::(::.Module, ::String) at ./loading.jl:1038
String) [8] include(:: at /home/kakizawa/lecture/julia/accumulator.jl:25Module, ::String) at ./sysimg.jl:29
 [3] 
 [9] exec_options(mean_gather(::::Accumulator, ::String, ::Base.JLOptions) at ./client.jl:267
 [10] MPI._start() at Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242

 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::CommModule) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::, ::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::StringBase.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::AccumulatorString) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::, MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.StringJLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
:: [8] include(::Module, ::::String) at ./sysimg.jl:29
 [9] exec_optionsmean(::(Base.JLOptions) at ./client.jl:267
 [10] _startmean(()Accumulator, :: at ./client.jl:436String) at /home/kakizawa/lecture/julia/accumulator.jl:25

in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
 [3] meanmean_gather(::Accumulator, ::String, ::(MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.::::Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
mean(Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436Accumulator
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
::AccumulatorAccumulator, , ::::String)String) at /home/kakizawa/lecture/julia/accumulator.jl:25 at 
 [3] mean_gather/home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::(MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::::ModuleAccumulator, ::String, ::, MPI.::Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::StringModule, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::)Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
 at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
Accumulator, :: [4] solve(String) at /home/kakizawa/lecture/julia/accumulator.jl:25::
 [3] mean_gather(::Accumulator, ::String, ::StringMPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::, ::MPI.ModuleComm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::, Module, ::String) at Accumulator./loading.jl:1038
 [8] include, ::(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::::String)BaseString) at ./loading.jl:1038 at /home/kakizawa/lecture/julia/accumulator.jl:25
 [8] include(::
 [3] Module, ::Stringmean_gather() at ./sysimg.jl:29
::Accumulator,  [9] exec_options(::String, ::::.Base.JLOptions)MPI.Comm) at ./client.jl:267
 [10]  at /home/kakizawa/lecture/julia/accumulator.jl:30_start()
 [4] solve at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242(::String, 
::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::JLOptionsModule, )::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(:: at Base./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Accumulator, ::String) at /home/kakizawa/lecture/julia/accumulator.jl:25
 [3] mean_gather(::Accumulator, ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/accumulator.jl:30
 [4] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/cp_main.jl:201
 [5] top-level scope at util.jl:156
 [6] include at ./boot.jl:326 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1038
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:267
 [10] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/cp_main.jl:242
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5647: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Wed Nov  6 11:51:42 2019
Results reported at Wed Nov  6 11:52:04 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    352.29 sec.

The output (if any) follows:

ERROR: ERROR: ERROR: ERROR: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: LoadError: Number of processes > num_tempsNumber of processes > num_tempsNumber of processes > num_tempsNumber of processes > num_tempsNumber of processes > num_tempsNumber of processes > num_temps
Stacktrace:Number of processes > num_temps
Stacktrace:Number of processes > num_temps
Stacktrace:Number of processes > num_tempsNumber of processes > num_tempsNumber of processes > num_temps
 [1] 
 [1] Number of processes > num_temps
Stacktrace:
 [1] 
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
 [1] 
 [1] 
 [1] 
Stacktrace:
Stacktrace:
Stacktrace:
 [1] 
Stacktrace:
 [1] 
 [1] 
 [1] 
 [1] Number of processes > num_tempsNumber of processes > num_temps
 [1] errorerrorerrorerror
Stacktrace:errorerror
Stacktrace:((errorerror::(::
 [1] errorerrorerror::
 [1] error(((::::::((Number of processes > num_temps::::(((::::::(String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] ::include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(include:: at Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
errorString) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
error [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260

Stacktrace:String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
String) at ./error.jl:33 [5] 
include_relative(:: [2] Modulesolve(::String, ::, ::String) at ./loading.jl:1038MPI
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::.BaseComm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] String).JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
 at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at include./sysimg.jl:29
 [7] exec_options(:: at Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start()
 [1]  at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] (includeString) at ./boot.jl:326 [inlined]
 [5] include_relative(:: at ./error.jl:33Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.
JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String() at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
::StringString) at ./error.jl:33
) at ./error.jl:33
 [2]  [2] solve(::String, ::solve(MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] Number of processes > num_tempsString) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] includeinclude(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(:: at Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260

Stacktrace:error
 [1] String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
include [4]  at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
(Number of processes > num_temps::Number of processes > num_tempserror
Stacktrace:
Stacktrace:Number of processes > num_temps
 [1] Number of processes > num_tempsNumber of processes > num_tempsString) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] 
 [1] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
(::Number of processes > num_temps
Stacktrace:
Stacktrace:
Stacktrace:
 [1] 
 [1] 
 [1] error
Stacktrace:errorNumber of processes > num_tempsString) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260

 [1] ((::
Stacktrace:error::errorerror
 [1] (error::((String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] ::include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Number of processes > num_tempsModule, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
(error::String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] 
Stacktrace:include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
( [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
::
 [1] String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
error(::String) at ./error.jl:33
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:117
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:260
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5648: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Wed Nov  6 12:00:02 2019
Results reported at Wed Nov  6 12:08:11 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :  11374.44 sec.

The output (if any) follows:

Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5650: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Wed Nov  6 12:26:12 2019
Results reported at Wed Nov  6 12:34:27 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :  11671.35 sec.

The output (if any) follows:

Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5651: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Wed Nov  6 12:38:53 2019
Results reported at Wed Nov  6 12:39:24 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    620.20 sec.

The output (if any) follows:

Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5653: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Wed Nov  6 12:42:33 2019
Results reported at Wed Nov  6 12:50:34 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :  11395.34 sec.

The output (if any) follows:

Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5657: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Wed Nov  6 13:45:53 2019
Results reported at Wed Nov  6 13:54:08 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :  11599.62 sec.

The output (if any) follows:

Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5674: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Mon Nov 11 16:02:08 2019
Results reported at Mon Nov 11 16:02:39 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    458.91 sec.

The output (if any) follows:

ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: ERROR: LoadError: ERROR: ERROR: LoadError: UndefVarError: temp_energy not definedLoadError: UndefVarError: temp_energy not definedUndefVarError: temp_energy not definedUndefVarError: temp_energy not definedERROR: 
Stacktrace:LoadError: 
Stacktrace:UndefVarError: temp_energy not defined
Stacktrace:
Stacktrace:
 [1] 
 [1] 
 [1] 
 [1] 
Stacktrace:
 [1] SingleSpinFlipUpdaterSingleSpinFlipUpdaterSingleSpinFlipUpdaterSingleSpinFlipUpdaterERROR: (::UndefVarError: temp_energy not defined(((LoadError: ::::SingleSpinFlipUpdater::
Stacktrace:(JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] ::include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [1] JModelJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
) at /home/kakizawa/lecture/julia/mcmc.jl:68 [2] 
solve(:: [2] String, solve::(MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] ::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at include at ./boot.jl:326 [inlined]./loading.jl:1038

 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(:: [5] Baseinclude_relative(::.JLOptions) at ./client.jl:267Module
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
SingleSpinFlipUpdaterUndefVarError: temp_energy not defined(UndefVarError: temp_energy not defined::UndefVarError: temp_energy not definedUndefVarError: temp_energy not defined
Stacktrace:UndefVarError: temp_energy not defined
 [1] UndefVarError: temp_energy not defined
Stacktrace:
Stacktrace:
Stacktrace:
 [1] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] 
Stacktrace:include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [1] 
 [1] 
Stacktrace:UndefVarError: temp_energy not defined
 [1] SingleSpinFlipUpdaterUndefVarError: temp_energy not defined
 [1] ERROR: SingleSpinFlipUpdater(
Stacktrace:SingleSpinFlipUpdaterSingleSpinFlipUpdater::
Stacktrace:LoadError: 
 [1] SingleSpinFlipUpdater
 [1] (((::SingleSpinFlipUpdater::::(JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] ::include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
UndefVarError: temp_energy not definedSingleSpinFlipUpdater(SingleSpinFlipUpdater::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at include./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
 at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(UndefVarError: temp_energy not defined
Stacktrace:::(JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] ::include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [1] UndefVarError: temp_energy not definedUndefVarError: temp_energy not definedJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] UndefVarError: temp_energy not definedinclude at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

Stacktrace:
 [1] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.CommUndefVarError: temp_energy not defined) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] 
Stacktrace:include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29

Stacktrace: [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

Stacktrace:SingleSpinFlipUpdater
 [1] 
 [1] UndefVarError: temp_energy not defined
 [1] UndefVarError: temp_energy not defined
Stacktrace:(SingleSpinFlipUpdater::
 [1] 
Stacktrace:
 [1] 
Stacktrace:SingleSpinFlipUpdater(SingleSpinFlipUpdater::SingleSpinFlipUpdater
 [1] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
((SingleSpinFlipUpdater::(::::SingleSpinFlipUpdaterJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(SingleSpinFlipUpdater::(UndefVarError: temp_energy not defined::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::include at ./boot.jl:326 [inlined]String
 [5] include_relative(::) at ./sysimg.jl:29Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::
Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(::
Stacktrace:JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] 
 [1] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
UndefVarError: temp_energy not defined
Stacktrace:
 [1] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5675: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Mon Nov 11 16:09:08 2019
Results reported at Mon Nov 11 16:09:31 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    372.81 sec.

The output (if any) follows:

ERROR: ERROR: ERROR: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: LoadError: LoadError: ERROR: LoadError: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: ERROR: ERROR: ERROR: LoadError: ERROR: ERROR: LoadError: LoadError: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: UndefVarError: temp_energy not definedUndefVarError: temp_energy not definedUndefVarError: temp_energy not definedERROR: UndefVarError: temp_energy not definedUndefVarError: temp_energy not defined
Stacktrace:LoadError: UndefVarError: temp_energy not defined
Stacktrace:
Stacktrace:
 [1] UndefVarError: temp_energy not defined
Stacktrace:
Stacktrace:
 [1] 
 [1] 

 [1]  [1] 
Stacktrace:UndefVarError: temp_energy not defined
Stacktrace:
 [1] 
 [1] UndefVarError: temp_energy not definedSingleSpinFlipUpdater
Stacktrace:SingleSpinFlipUpdaterSingleSpinFlipUpdaterSingleSpinFlipUpdaterSingleSpinFlipUpdater
 [1] 
Stacktrace:(SingleSpinFlipUpdater::
 [1] ((SingleSpinFlipUpdater::::((::::(SingleSpinFlipUpdater::(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
SingleSpinFlipUpdaterJModel)JModel at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::) at String, ::/home/kakizawa/lecture/julia/mcmc.jl:68MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] 
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::includeModule at ./boot.jl:326 [inlined]
, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(:: [5] Baseinclude_relative(::.JLOptions)Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(:: at Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModelJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(:: [2] solveString, ::(::MPI.CommString) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] , ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] (include at ./boot.jl:326 [inlined]
include [5]  at ./boot.jl:326 [inlined]
include_relative(:: [5] include_relative(::Module, ::StringModule, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::)Base at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::.JLOptionsBase.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] (include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
UndefVarError: temp_energy not definedJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
ERROR: JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

Stacktrace:LoadError: 
 [1] UndefVarError: temp_energy not defined
Stacktrace:SingleSpinFlipUpdater
 [1] UndefVarError: temp_energy not definedUndefVarError: temp_energy not definedUndefVarError: temp_energy not defined
Stacktrace:(UndefVarError: temp_energy not definedUndefVarError: temp_energy not definedUndefVarError: temp_energy not defined::
 [1] SingleSpinFlipUpdater
Stacktrace:UndefVarError: temp_energy not definedUndefVarError: temp_energy not defined
Stacktrace:
Stacktrace:
Stacktrace:
Stacktrace:
 [1] UndefVarError: temp_energy not defined
 [1] UndefVarError: temp_energy not definedUndefVarError: temp_energy not defined
 [1] 
 [1] 
 [1] 
Stacktrace:
Stacktrace:(JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
::SingleSpinFlipUpdater
 [1] 
 [1] 
Stacktrace:
Stacktrace:
Stacktrace:
SingleSpinFlipUpdater [1] 
 [1] 
 [1] SingleSpinFlipUpdaterSingleSpinFlipUpdaterSingleSpinFlipUpdaterSingleSpinFlipUpdater(JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, UndefVarError: temp_energy not defined::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156::
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(SingleSpinFlipUpdaterSingleSpinFlipUpdater::((::SingleSpinFlipUpdater((
Stacktrace:SingleSpinFlipUpdaterSingleSpinFlipUpdater::::::(JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68(
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] 
 [1] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
::::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] (include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
((::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] ::::include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68JModel)
 [2]  at solve(::/home/kakizawa/lecture/julia/mcmc.jl:68
String, :: [2] MPIsolve(::.Comm)String at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] , ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at include at ./boot.jl:326 [inlined]
./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(:: [5] Baseinclude_relative(::.JLOptionsModule) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModelJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] )solve at /home/kakizawa/lecture/julia/mcmc.jl:68(::
 [2] solveString(::, ::StringMPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] , ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038include at ./boot.jl:326 [inlined]
 [5] include_relative(::
 [6] Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::include(::ModuleBase, ::String) at ./sysimg.jl:29
 [7] exec_options(::.BaseJLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
SingleSpinFlipUpdaterJModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(String::, ::String, MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at include at ./boot.jl:326 [inlined]
 [5] include_relative./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::(Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
UndefVarError: temp_energy not defined
Stacktrace:
 [1] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:68
 [2] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [3] top-level scope at util.jl:156
 [4] include at ./boot.jl:326 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1038
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:267
 [8] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5676: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Mon Nov 11 16:18:18 2019
Results reported at Mon Nov 11 16:18:41 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    370.89 sec.

The output (if any) follows:

ERROR: ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: ERROR: LoadError: LoadError: LoadError: ERROR: ERROR: LoadError: ERROR: LoadError: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: LoadError: ERROR: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: LoadError: ERROR: LoadError: MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
Stacktrace:
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
 [1] 
 [1] 
MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ... [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] 
 [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
Stacktrace:
Stacktrace:
 [1] 
Stacktrace:
 [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
 [1] 
 [1] convertconvertconvertMethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] convertconvert
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...(((
Stacktrace:
 [1] convert::::::((convertMethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...::::
 [1] convert
Stacktrace:convertconvert
 [1] ((::
Stacktrace:::((Type{Type{Tuple{}}Tuple{}}, ::, Tuple{::Float64,Float64}) at ./essentials.jl:271
 [2] convert(Tuple{::Float64,Float64}) at ./essentials.jl:271
 [2] Typeconvert(::{Type{Tuple{Float64}}, ::Type::Tuple{Float64,Float64,Tuple{Float64}Float64}) at }, ::./essentials.jl:275Tuple{{Float64,Float64,Float64}) at ./essentials.jl:275Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275convert::
 [1] Type{Tuple{}}, ::Tuple{Float64,Float64})Type{ at ./essentials.jl:271
 [2] convert(::Type{Tuple{}}Tuple, ::{Tuple{Float64Float64,Float64}) at ./essentials.jl:271
 [2] convert}}, ::(Tuple{Float64,Float64,Float64}) at ./essentials.jl:275::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats  (repeats ( (repeats 22 times)
 [3]  times)
 [3] 2 times)
 [3] ::setindex! at ./array.jl:769 [inlined]
 [4] macro expansionsetindex! at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(:: at ./array.jl:769IndexLinear, :: [inlined]Array{
Tuple{ [4] Int64,Float64},macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear,  (repeats ::Array{Tuple{Int64,setindex! at ./array.jl:769 [inlined]Float64},
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(:: (repeats IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] 2}, ::setindex!(Array{::Array{TupleTuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] {Int64SingleSpinFlipUpdater(::,JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::Float64String, ::,MPIFloat64,Float64},1}, ::.Comm) at /home/kakizawa/lecture/julia/main.jl:134UnitRange
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::{ModuleInt64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] , ::SingleSpinFlipUpdater(::StringJModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::2}, ::convert) at ./loading.jl:1038
String [15] include(Array{::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Tuple{Int64,Float64,Float64,Float64},1}Base.JLOptions) at , ::./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262UnitRange{Int64}, 
::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] , ::SingleSpinFlipUpdater(::JModelMPI) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::.String, ::CommMPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::)Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(:: at Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
/home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(2 times)
::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(:: [3] Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::2}, ::MPIArray{.TupleComm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::{Int64,Float64Module,Float64,Float64},1}, ::, UnitRange::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::{Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275convertType{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275:: (repeats Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2]  (repeats convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:2752 times)
 [3] (setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at 2./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(:: times)
IndexLinear, :: [3] Array{Tuple{Int64,Float64},Type{Tuple{}}2}, ::, ::Array{Tuple{Float64,Tuple{Int64,Float64,Float64,Float64},1}, ::Float64UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] }) at SingleSpinFlipUpdater./essentials.jl:271
 [2] convert(::(Type::{TupleJModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::{String, ::Float64MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::}Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_optionssetindex! at ./array.jl:769(:: [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]Base.JLOptions)
 [5] macro expansion at ./cartesian.jl:64 at ./client.jl:267
 [17]  [inlined]
 [6] macro expansion at _start() at ./client.jl:436./multidimensional.jl:696 [inlined]
 [7] 
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
_unsafe_setindex!(::}, ::IndexLinear, ::ArrayTuple{Float64,Float64,Float64}) at ./essentials.jl:275{Tuple{Int64,Float64},:: (repeats 2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
2 times)
 [3] setindex! at ./array.jl:769 (repeats  [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansionType at {./multidimensional.jl:696 [inlined]Tuple{
}}, :: [7] Tuple{_unsafe_setindex!Float64,Float64}) at ./essentials.jl:271
(:: [2] IndexLinearconvert(::, Type::{Array{TupleTuple{Float64}}, ::{Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Int64,Float64},convert2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, (::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64)2 times) at 
 [3] ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64}, (repeats 2}, ::::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275( (repeats 2 times)
 [3] Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
 (repeats 
Stacktrace:2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type2}, ::{ArrayTuple{{Tuple{Int64,Float64,Float64,Float64},1}, ::Float64UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] }}SingleSpinFlipUpdater(::, JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::::String, ::MPITuple{Float64,Float64,Float64}) at ./essentials.jl:275.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1]  (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275
Stacktrace: (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,
 [1] Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
convertMethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...(::convertMethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
Stacktrace:
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] 
 [1] 
 [1] (
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275::
Stacktrace:
Stacktrace: (repeats 
 [1] 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions)
 at  [1] ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
 [1] 

Stacktrace:convertMethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] convertconvertType{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::(UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

Stacktrace:convert(::(convertconvert::::
 [1] convert((::(::::Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275(Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats ::2 times)
 [3]  (repeats setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64}, (repeats 2 times)
 [3] 2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, convert::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm2 times)
) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(:: [3] Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29setindex! at 
 [16] exec_options(./array.jl:769 [inlined]::
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at Base.JLOptions) at ./cartesian.jl:64 [inlined]
 [6] ./client.jl:267
 [17] macro expansion at ./multidimensional.jl:696 [inlined]_start()
 [7]  at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262_unsafe_setindex!(
::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::./multidimensional.jl:689
IndexLinear, :: [8] _setindex! at ./multidimensional.jl:684Array [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] {SingleSpinFlipUpdater(::Tuple{JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::Int64,MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Float64Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::}Base,.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, Type{::TupleTuple{{}Float64}, ::,Tuple{Float64Float64,Float64}) at ./essentials.jl:271
 [2] convert(::}Type{)Tuple{Float64}}, :: at Tuple{Float64,Float64,Float64}) at ./essentials.jl:275./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats  (repeats  (repeats (2 times)
 [3] 2 times)
 [3] 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple::{Int64,Float64}setindex!, at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{2}, Tuple{::Int64,Float64},Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRangeType{{Int64}Tuple{}}, ::, Tuple{::Float64,Float64}) at ./essentials.jl:271Int64
 [2] convert(::)Type{ at Tuple{Float64}}, ::./multidimensional.jl:689Tuple{Float64,Float64,Float64}) at ./essentials.jl:275
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple2}, ::{Int64Array{,TupleFloat64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] {Int64,Float64,SingleSpinFlipUpdaterFloat64,Float64},1}, ::(UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] ::SingleSpinFlipUpdater(::JModel)JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(:: at String, ::/home/kakizawa/lecture/julia/mcmc.jl:76MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::
Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(:: [11] Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Sender: LSF System <lavaadmin@sakura01.local>
Subject: Job 5677: <test> Done

Job <test> was submitted from host <sakura01.local> by user <kakizawa>.
Job was executed on host(s) <24*sakura01.local>, in queue <normal>, as user <kakizawa>.
</home/kakizawa> was used as the home directory.
</home/kakizawa/lecture/julia> was used as the working directory.
Started at Mon Nov 11 16:36:38 2019
Results reported at Mon Nov 11 16:37:08 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -n 24
#BSUB -o test
#BSUB -J test

export MPIRUN="/usr/share/lava/1.0/linux2.6-glibc2.12-x86_64/bin/intelmpi-mpirun"

date > output
$MPIRUN -np 24 julia ~/lecture/julia/main.jl 3d.ini >> output
date >> output


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time   :    395.67 sec.

The output (if any) follows:

ERROR: LoadError: ERROR: ERROR: LoadError: LoadError: ERROR: LoadError: ERROR: ERROR: LoadError: ERROR: ERROR: ERROR: LoadError: LoadError: LoadError: LoadError: ERROR: ERROR: ERROR: ERROR: LoadError: ERROR: LoadError: LoadError: LoadError: ERROR: LoadError: ERROR: ERROR: LoadError: ERROR: ERROR: MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...LoadError: LoadError: LoadError: LoadError: 
Stacktrace:
 [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...convert
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
 [1] 
 [1] (::
Stacktrace:
 [1] convertconvertType{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},(2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
convert(::::ERROR: (LoadError: ::Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275ERROR:  (repeats  (repeats ERROR: 2 times)
 [3] 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::2}, ::ArrayArray{{TupleTuple{{Int64,Float64},Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm)2}, :: at /home/kakizawa/lecture/julia/main.jl:134Array{
Tuple{Int64,Float64,Float64,Float64},1}, :: [12] UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] top-level scope at SingleSpinFlipUpdater(::util.jl:156JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::
String, :: [13] MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::includeModule, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(:: at Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
LoadError: Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275LoadError:  (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
 [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...convert
Stacktrace:
Stacktrace:
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...

 [1]  [1] 
Stacktrace:(MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] ::MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
 [1] 
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
Stacktrace:convertconvert
 [1] 
Stacktrace:
 [1] Type{MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275
 [1] convert
 [1] convert
 [1]  (repeats 2 times)
 [3] 
Stacktrace:setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] (include at (./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
::::
Stacktrace:convert
 [1] ERROR: ((::
 [1] ::convert
Stacktrace:LoadError: convert(convertconvert::convert
 [1] TypeType{{Tuple{Tuple{}}, ::}}Tuple{, Float64,Float64}) at ./essentials.jl:271::
 [2] convert(::TypeTuple{{Float64,Float64}) at ./essentials.jl:271
 [2] Tuple{Float64}}, ::convertTuple{Float64,Float64,Float64}) at ./essentials.jl:275(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275( (repeats ( (repeats ::2 times)
 [3] 2 times)
 [3] (convertType{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::setindex! at ./array.jl:769 [inlined]Type{::
 [4] macro expansion at ./multidimensional.jl:701Tuple{Float64} [inlined]
 [5] macro expansion}, :: at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] Tuple{Float64,Float64,Float64}_unsafe_setindex!() at ./essentials.jl:275::IndexLinear, ::Array{Tuple{Int64,Float64},setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},(2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}2}, ::, ::Array{Array{Tuple{TupleInt64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] {Int64SingleSpinFlipUpdater,Float64,Float64,Float64},1}, ::(UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!::JModel() at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::::String, ::ArrayMPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156Type
 [13] include at {./boot.jl:326 [inlined]
 [14] include_relative(::{Module, ::String) at ./loading.jl:1038
 [15] Tuple{}}, include(::Module::, ::String) at ./sysimg.jl:29
 [16] exec_options(::Tuple{TupleBase.JLOptions)Float64,Float64 at ./client.jl:267}) at 
 [17] _start() at ./client.jl:436./essentials.jl:271
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [2] {convert(::Int64,Type{Float64Tuple{Float64}}, ::},2}, Tuple::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] {Float64SingleSpinFlipUpdater(::,JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::Float64String, ::,MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Float64Module}) at ./essentials.jl:275, ::String) at ./loading.jl:1038(
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
:::: (repeats convert::2 times)
 [3]  (repeats setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2 times)
 [3] ERROR: 2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] TypeSingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::{String, ::setindex! at ./array.jl:769 [inlined]MPI.Comm) at 
 [4] macro expansion/home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at ./multidimensional.jl:701 [inlined]
 at util.jl:156
 [13]  [5] macro expansion at ./cartesian.jl:64 [inlined]include at ./boot.jl:326 [inlined]

 [6] macro expansion at  [14] include_relative(::./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::StringTuple) at ./sysimg.jl:29
{}} [16] exec_options(::, ::(TupleBase.JLOptions) at ./client.jl:267{
 [17] _start() at ./client.jl:436Float64,Float64}
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
) at ./essentials.jl:271::
 [2] convertIndexLinear, ::Array{(::Tuple{Int64Type,Float64},{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:2752}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
( (repeats MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...2 times)
 [3] LoadError: ::convertsetindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
( [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275::Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}} (repeats , ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:2752 times)
 [3] 
Stacktrace: (repeats setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
2 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(:: times)IndexLinear
 [3] , ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64setindex!) at ./array.jl:769 [inlined]
 at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10]  [4] macro expansionSingleSpinFlipUpdater(:: at JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::./multidimensional.jl:701String, :: [inlined]MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::
Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(:: [5] Base.JLOptions) at ./client.jl:2672
 [17] _start() at  times)./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [3] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{ (repeats Int64,Float64}, (repeats (2}, ::Array{Tuple{Int64,Float64,Float64setindex!,Float64},1}, :: at UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] ./array.jl:769 [inlined]SingleSpinFlipUpdater(::
 [4] macro expansionJModel at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::) at /home/kakizawa/lecture/julia/mcmc.jl:76IndexLinear, ::
Array{ [11] Tuple{solveInt64,Float64},(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base2 times).JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [3] 2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::2UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10]  times)SingleSpinFlipUpdater
(:: [3] JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},::setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},
 [1] 2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{2Tuple}, ::{Int64Array{,TupleFloat64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] {Int64,Float64,Float64SingleSpinFlipUpdater,Float64},1}, ::(UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] ::SingleSpinFlipUpdaterJModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::(String, ::::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::ModuleJModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::, String, ::::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::StringModule, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::)Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
 at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array (repeats {Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] 2 times)
 [3] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275convert (repeats MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...::
 [1] 
Stacktrace:MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
 [1] Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 
Stacktrace:2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},convert2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262

 [1] (convert::(convert::Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats (2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},::2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...
Stacktrace:
 [1] MethodError: Cannot `convert` an object of type Tuple{Float64,Float64} to an object of type Tuple{}
Closest candidates are:
  convert(::Type{Tuple{}}, ::Tuple{Any,Vararg{Any,N} where N}) at essentials.jl:271
  convert(::Type{Tuple{}}, !Matched::Tuple{}) at essentials.jl:270
  convert(::Type{Tuple{}}, !Matched::CartesianIndices{0,R} where R<:Tuple{}) at multidimensional.jl:280
  ...convert
Stacktrace:
 [1] (::Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275convert (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
(::Type{Tuple{}}, ::Tuple{Float64,Float64}) at ./essentials.jl:271
 [2] convert(::Type{Tuple{Float64}}, ::Tuple{Float64,Float64,Float64}) at ./essentials.jl:275 (repeats 2 times)
 [3] setindex! at ./array.jl:769 [inlined]
 [4] macro expansion at ./multidimensional.jl:701 [inlined]
 [5] macro expansion at ./cartesian.jl:64 [inlined]
 [6] macro expansion at ./multidimensional.jl:696 [inlined]
 [7] _unsafe_setindex!(::IndexLinear, ::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./multidimensional.jl:689
 [8] _setindex! at ./multidimensional.jl:684 [inlined]
 [9] setindex!(::Array{Tuple{Int64,Float64},2}, ::Array{Tuple{Int64,Float64,Float64,Float64},1}, ::UnitRange{Int64}, ::Int64) at ./abstractarray.jl:1020
 [10] SingleSpinFlipUpdater(::JModel) at /home/kakizawa/lecture/julia/mcmc.jl:76
 [11] solve(::String, ::MPI.Comm) at /home/kakizawa/lecture/julia/main.jl:134
 [12] top-level scope at util.jl:156
 [13] include at ./boot.jl:326 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1038
 [15] include(::Module, ::String) at ./sysimg.jl:29
 [16] exec_options(::Base.JLOptions) at ./client.jl:267
 [17] _start() at ./client.jl:436
in expression starting at /home/kakizawa/lecture/julia/main.jl:262
